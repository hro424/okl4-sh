/*****************************************************************
 * DO NOT EDIT - MACHINE-GENERATED FILE!
 * 
 * Source file : ../input/kernelmsg.idl
 * Platform    : V4 Generic
 * Mapping     : CORBA C
 * 
 * Generated by IDL4 1.0.2 (roadrunner) on 16/06/2006 17:36
 * Report bugs to haeberlen@ira.uka.de
 *****************************************************************/

#if !defined(__kernelmsg_client_h__)
#define __kernelmsg_client_h__

#define IDL4_OMIT_FRAME_POINTER 0
#define IDL4_USE_FASTCALL 0
#define IDL4_NEED_MALLOC 1
#define IDL4_API v4
#define IDL4_ARCH generic

#include "idl4/idl4.h"

#if IDL4_HEADER_REVISION < 20030403
#error You are using outdated versions of the IDL4 header files
#endif /* IDL4_HEADER_REVISION < 20030403 */

/* Interface with_kernelmsg */

#if !defined(_objdef___with_kernelmsg)
#define _objdef___with_kernelmsg
typedef CORBA_Object with_kernelmsg;
#endif /* !defined(_objdef___with_kernelmsg) */

// Channel 0:                        ID OFFS SIZE ALGN FLAGS BUF
//   R0: long _msgtag                 6    0    4    4 -p---  -1
//   R4: CORBA_long addr              2    4    4    4 x----  -1
//   R8: CORBA_long ip                3    8    4    4 x----  -1
//   X-: CORBA_long priv              4   -1    4    4 x-1--  -1
// 
// Channel 1:                        ID OFFS SIZE ALGN FLAGS BUF
//   R-: long _msgtag                 7   -1    4    4 -p---  -1
//   F0: idl4_fpage_t fp              5    0    1    1 x----  -1

#if !defined(_funcdef___with_kernelmsg_pagefault)
#define _funcdef___with_kernelmsg_pagefault
static inline void with_kernelmsg_pagefault(with_kernelmsg _service, const CORBA_long addr, const CORBA_long ip, const CORBA_long priv, idl4_fpage_t *fp, CORBA_Environment *_env)

{
  long _exception;
  L4_MsgTag_t _result;
  L4_ThreadId_t _dummy;
  union _buf {
    struct {
      long _msgtag;
      CORBA_long addr;
      CORBA_long ip;
    } _in;
    struct {
      long _msgtag;
      idl4_mapitem fp;
    } _out;
  } _pack;

  /* marshal */
  
  L4_LoadBR(0, 0 | _env->_rcv_window.raw);
  _pack._in.addr = addr;
  _pack._in.ip = ip;

  /* invoke IPC */
  
  _pack._in._msgtag = 2+((65504u+(priv & 7)) << 16);
  L4_MsgLoad((L4_Msg_t *)((void*)&_pack));
  L4_Accept(_env->_rcv_window);
  _result = L4_Ipc(_service, _service, (_env == 0) ? L4_Timeouts(L4_Never, L4_Never) : _env->_timeout, &_dummy);
  L4_MsgStore(_result, (L4_Msg_t *)((void*)&_pack));
  L4_LoadBR(0, 0);

  _exception = L4_Label(_result);

  if (IDL4_EXPECT_TRUE((L4_IpcSucceeded(_result)) && !_exception))
    {
      /* unmarshal */
      
      *fp = _pack._out.fp;
    }

  if (_env != 0)
    {
      if (!L4_IpcSucceeded(_result))
        *(L4_Word_t*)_env = CORBA_SYSTEM_EXCEPTION+(L4_ErrorCode() << 8);
        else *(L4_Word_t*)_env = _exception;
    }
}
#endif /* !defined(_funcdef___with_kernelmsg_pagefault) */

// Channel 0:                        ID OFFS SIZE ALGN FLAGS BUF
//   R0: long _msgtag                 6    0    4    4 -p---  -1
//   R4: CORBA_long addr              2    4    4    4 x----  -1
//   R8: CORBA_long ip                3    8    4    4 x----  -1
//   R12: CORBA_long priv             4   12    4    4 x----  -1
// 
// Channel 1:                        ID OFFS SIZE ALGN FLAGS BUF
//   R-: long _msgtag                 7   -1    4    4 -p---  -1
//   F0: idl4_fpage_t fp              5    0    1    1 x----  -1

#if !defined(_funcdef___with_kernelmsg_fake_pagefault)
#define _funcdef___with_kernelmsg_fake_pagefault
static inline void with_kernelmsg_fake_pagefault(with_kernelmsg _service, const CORBA_long addr, const CORBA_long ip, const CORBA_long priv, idl4_fpage_t *fp, CORBA_Environment *_env)

{
  long _exception;
  L4_MsgTag_t _result;
  L4_ThreadId_t _dummy;
  union _buf {
    struct {
      long _msgtag;
      CORBA_long addr;
      CORBA_long ip;
      CORBA_long priv;
    } _in;
    struct {
      long _msgtag;
      idl4_mapitem fp;
    } _out;
  } _pack;

  /* marshal */
  
  L4_LoadBR(0, 0 | _env->_rcv_window.raw);
  _pack._in.addr = addr;
  _pack._in.ip = ip;
  _pack._in.priv = priv;

  /* invoke IPC */
  
  _pack._in._msgtag = 3+((2369u) << 16);
  L4_MsgLoad((L4_Msg_t *)((void*)&_pack));
  L4_Accept(_env->_rcv_window);
  _result = L4_Ipc(_service, _service, (_env == 0) ? L4_Timeouts(L4_Never, L4_Never) : _env->_timeout, &_dummy);
  L4_MsgStore(_result, (L4_Msg_t *)((void*)&_pack));
  L4_LoadBR(0, 0);

  _exception = L4_Label(_result);

  if (IDL4_EXPECT_TRUE((L4_IpcSucceeded(_result)) && !_exception))
    {
      /* unmarshal */
      
      *fp = _pack._out.fp;
    }

  if (_env != 0)
    {
      if (!L4_IpcSucceeded(_result))
        *(L4_Word_t*)_env = CORBA_SYSTEM_EXCEPTION+(L4_ErrorCode() << 8);
        else *(L4_Word_t*)_env = _exception;
    }
}
#endif /* !defined(_funcdef___with_kernelmsg_fake_pagefault) */

#endif /* !defined(__kernelmsg_client_h__) */
