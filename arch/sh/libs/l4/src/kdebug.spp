/**
 *  @brief  Implementation of the kernel debugger interface
 *  @since  March 2009
 *  @author Hiroo Ishikawa <hiroo.ishikawa@gmail.com>
 */

#include <compat/asm.h>
#include <l4/arch/vregs.h>
#include <l4/arch/syscalls_asm.h>

/*
 * L4_KDB_Enter
 */
        EXPORT  L4_KDB_Enter
LABEL(L4_KDB_Enter)
        /*
         * Save R8 to R7.  R8 is used to hold syscall number.
         * R7 is used as the forth argument of a function call in general,
         * and saved and restored by the trap handler.
         */
        mov     r8, r7
        sts     pr, r6
        mov.l   1f, r8
        trapa   #SYSCALL_NUM

        /* Recover R8 by means of R7.  R7 is restored by the trap handler. */
        mov     r7, r8
        jmp     @r6
        nop
        .balign 4
1:      .long   L4_TRAP_KDEBUG


#if defined(__GNUC__)
        .macro  __L4_KDB_Op op, name
        EXPORT  \name
LABEL(\name)
        mov     r8, r7
        sts     pr, r6
        mov.l   1f, r8
        trapa   #SYSCALL_NUM
        mov     r7, r8
        jmp     @r6
        nop
        .balign 4
1:      .long   \op
        .endm

#define L4_KDB_Op(op, name)     __L4_KDB_Op     op, name

#endif


        L4_KDB_Op(L4_TRAP_GETTICK, L4_KDB_GetTick)
        L4_KDB_Op(L4_TRAP_KGETC, L4_KDB_ReadChar_Blocked_ASM)
        L4_KDB_Op(L4_TRAP_KGETC_NB, L4_KDB_ReadChar_ASM)
        L4_KDB_Op(L4_TRAP_KPUTC, L4_KDB_PrintChar_ASM)
#if defined(CONFIG_DEBUG)
        L4_KDB_Op(L4_TRAP_CKBR, L4_KDB_Set_Breakin_ASM)
#endif
        L4_KDB_Op(L4_TRAP_GETCOUNTER, L4_KDB_GetTracepointCount)
        L4_KDB_Op(L4_TRAP_GETNUMTPS, L4_KDB_GetNumTracepoints)
        L4_KDB_Op(L4_TRAP_GETTPNAME, L4_KDB_GetTracepointNameIntroMRs)
        L4_KDB_Op(L4_TRAP_TCCTRL, L4_KDB_TCCtrl)

        /*TODO: Get the NDA code
        L4_KDB_Op(L4_TRAP_PMN_READ, L4_KDB_PMN_Read)
        L4_KDB_Op(L4_TRAP_PMN_WRITE, L4_KDB_PMN_Write)
        L4_KDB_Op(L4_TRAP_PMN_OFL_READ, L4_KDB_PMN_Ofl_Read)
        L4_KDB_Op(L4_TRAP_PMN_OFL_WRITE, L4_KDB_PMN_Ofl_Write)
        */

/*
 * L4_KDB_SetObjectName_ASM(word_t type, word_t id, const char* name)
 */
        EXPORT  L4_KDB_SetObjectName_ASM
LABEL(L4_KDB_SetObjectName_ASM)
        sts     pr, r1
        mov.l   r1, @-r15
        mov.l   r9, @-r15
        mov.l   r8, @-r15
        mov.l   @(0, r6), r7
        mov.l   @(4, r6), r1
        mov.l   @(8, r6), r2
        mov.l   @(12, r6), r3

        mov     #L4_TRAP_KSET_OBJECT_NAME, r8
        trapa   #SYSCALL_NUM

        mov.l   @r15+, r8
        mov.l   @r15+, r9
        mov.l   @r15+, r1
        jmp     @r1
        nop

#if defined(CONFIG_WBTEST)
/*
 * White box text functions
 * L4_Wbtest(L4_Word_t op, L4_Word_t* arg0, L4_Word_t* arg1, L4_Word_t* arg2)
 */
        EXPORT L4_Wbtest
LABEL(L4_Wbtest)
        sts     pr, r1
        mov.l   r1, @-r15
        mov.l   r8, @-r15
        mov.l   r5, @-r15
        mov.l   r6, @-r15
        mov.l   r7, @-r15

        /* Pass values */
        mov.l   @r5, r5
        mov.l   @r6, r6
        mov.l   @r7, r7

        mov     #L4_TRAP_WBTEST, r8
        trapa   #SYSCALL_NUM

        /* Write back to output addresses */
        mov.l   @r15+, r1
        mov.l   r7, @r1
        mov.l   @r15+, r1
        mov.l   r6, @r1
        mov.l   @r15+, r1
        mov.l   r5, @r1

        mov.l   @r15+, r8
        mov.l   @r15+, r1
        jmp     @r1
        nop

#endif
