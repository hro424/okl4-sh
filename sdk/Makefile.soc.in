#
# Copyright (c) 2008 Open Kernel Labs, Inc. (Copyright Holder).
# All rights reserved.
# 
# 1. Redistribution and use of OKL4 (Software) in source and binary
# forms, with or without modification, are permitted provided that the
# following conditions are met:
# 
#     (a) Redistributions of source code must retain this clause 1
#         (including paragraphs (a), (b) and (c)), clause 2 and clause 3
#         (Licence Terms) and the above copyright notice.
# 
#     (b) Redistributions in binary form must reproduce the above
#         copyright notice and the Licence Terms in the documentation and/or
#         other materials provided with the distribution.
# 
#     (c) Redistributions in any form must be accompanied by information on
#         how to obtain complete source code for:
#        (i) the Software; and
#        (ii) all accompanying software that uses (or is intended to
#        use) the Software whether directly or indirectly.  Such source
#        code must:
#        (iii) either be included in the distribution or be available
#        for no more than the cost of distribution plus a nominal fee;
#        and
#        (iv) be licensed by each relevant holder of copyright under
#        either the Licence Terms (with an appropriate copyright notice)
#        or the terms of a licence which is approved by the Open Source
#        Initative.  For an executable file, "complete source code"
#        means the source code for all modules it contains and includes
#        associated build and other files reasonably required to produce
#        the executable.
# 
# 2. THIS SOFTWARE IS PROVIDED ``AS IS'' AND, TO THE EXTENT PERMITTED BY
# LAW, ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
# PURPOSE, OR NON-INFRINGEMENT, ARE DISCLAIMED.  WHERE ANY WARRANTY IS
# IMPLIED AND IS PREVENTED BY LAW FROM BEING DISCLAIMED THEN TO THE
# EXTENT PERMISSIBLE BY LAW: (A) THE WARRANTY IS READ DOWN IN FAVOUR OF
# THE COPYRIGHT HOLDER (AND, IN THE CASE OF A PARTICIPANT, THAT
# PARTICIPANT) AND (B) ANY LIMITATIONS PERMITTED BY LAW (INCLUDING AS TO
# THE EXTENT OF THE WARRANTY AND THE REMEDIES AVAILABLE IN THE EVENT OF
# BREACH) ARE DEEMED PART OF THIS LICENCE IN A FORM MOST FAVOURABLE TO
# THE COPYRIGHT HOLDER (AND, IN THE CASE OF A PARTICIPANT, THAT
# PARTICIPANT). IN THE LICENCE TERMS, "PARTICIPANT" INCLUDES EVERY
# PERSON WHO HAS CONTRIBUTED TO THE SOFTWARE OR WHO HAS BEEN INVOLVED IN
# THE DISTRIBUTION OR DISSEMINATION OF THE SOFTWARE.
# 
# 3. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ANY OTHER PARTICIPANT BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Example Makefile for building soc.o and a linked kernel.

# Default location the OKL4 SDK. Please give this an absolute path.
OKL4_SDK_ROOT?=../../../..

#---------------------------------------------------------------------------
#                     SoC Developer Configuration
# Name of the platform (soc.o will really be called $(PLATFORM).o
PLATFORM=@PLATFORM@

#
# Type of kernel to build against. Modify these to make different
# kernel/build combinations.
KERNEL=micro
BUILD=debug
KERNEL_CONFIG=$(KERNEL)-$(BUILD)

#---------------------------------------------------------------------------
#                        System configuration
#
# SoC CPU Type (also the name of kernel.o
CPU=@CPU@

# Toolchain configuration
TOOLPREFIX=@TOOLPREFIX@
CC=$(TOOLPREFIX)@CC@
AS=$(TOOLPREFIX)@AS@
LD=$(TOOLPREFIX)@LINK@
MKDIR=mkdir -p
RM=rm -rf
CP=cp
EXIT=@false
ECHO=@echo -e
TEST=test

#                       End of configuration
#---------------------------------------------------------------------------

# Standard flags.
ASFLAGS=@ASFLAGS@
LDFLAGS=@LDFLAGS@
RELOC=@RELOC@

# Path to kernel interface.
KERNEL_DIR=$(OKL4_SDK_ROOT)/kernel/$(CPU)/$(KERNEL_CONFIG)

# Path to kernel type data.
CONFIG_DIR=$(KERNEL_DIR)/object

# Install paths
BUILD_DIR=build.$(KERNEL_CONFIG)
OBJ_DIR=$(BUILD_DIR)
BIN_DIR=$(BUILD_DIR)/bin

# Machine XML for the soc.
MACHINE_XML_IN=machine.xml.in
MACHINE_XML=$(BIN_DIR)/machine.xml

#
# The SoC modules only applies to the micro kernel. The only thing
# this Makefile does for the nano kernel is copy the machine.xml into
# place.
#
ifeq ($(KERNEL), micro)
# Load per-kernel type defines and flags.
include $(CONFIG_DIR)/defines
include $(CONFIG_DIR)/ccflags

KERNEL_OBJ=$(CONFIG_DIR)/$(CPU).o
LINKER_SCRIPT=@LINK_PREFIX@ $(CONFIG_DIR)/linker.lds
LIBS=$(wildcard $(KERNEL_DIR)/libs/*.a)
SRCDIRS=$(wildcard @SEARCHDIRS@)

ASDEFINES=@ASDEFINES@ $(DEFINES)
INCLUDES=-Iinclude -I$(KERNEL_DIR)/include

# Grab the required sources to compile the platform code
SRCFILES=$(foreach DIR,$(SRCDIRS),$(wildcard $(DIR)/*.c)) $(foreach DIR,$(SRCDIRS),$(wildcard $(DIR)/*.spp))
OBJFILES=$(foreach FILE, $(SRCFILES), $(OBJ_DIR)/$(basename $(FILE)).o)
endif

# Name of the linked kernel
KERNEL_BIN=$(BIN_DIR)/kernel
# Name of the soc
SOC_O=$(BIN_DIR)/$(PLATFORM).o

#
# Default target just builds the soc code
#
soc: $(SOC_O)

#
# Build everything producing a fully linked kernel
#
all: kernel

#
# Build the soc and copy it to the correct object directory
#
install: $(SOC_O)
ifeq ($(KERNEL), micro)
	$(CP) $(SOC_O) $(CONFIG_DIR)
endif
	$(CP) $(MACHINE_XML) $(CONFIG_DIR)

kernel: $(SOC_O) $(LIBS)
ifeq ($(KERNEL), micro)
	$(LD) -o $(KERNEL_BIN) $(LINKER_SCRIPT) $(LDFLAGS) $(KERNEL_OBJ) $(SOC_O) $(LIBS)
endif

$(SOC_O): $(MACHINE_XML) $(OBJFILES)
ifeq ($(KERNEL), micro)
	$(LD) $(RELOC) -o $(SOC_O) $(OBJFILES)
endif

$(OBJ_DIR)/%.o: %.c
	$(shell $(TEST) ! -d $(dir $@) && $(MKDIR) $(dir $@))
	$(CC) $(CCFLAGS) $(INCLUDES) $(DEFINES) -c $< -o $@

$(OBJ_DIR)/%.o: %.spp
	$(shell $(TEST) ! -d $(dir $@) && $(MKDIR) $(dir $@))
	@ASCOMPILE@

#
# Configure xml file(s)
#
$(MACHINE_XML): $(MACHINE_XML_IN)
	$(shell $(TEST) ! -d $(dir $@) && $(MKDIR) $(dir $@))
	$(CP) $(MACHINE_XML_IN) $(MACHINE_XML)

#
# Utility rules.
#
clean:
	$(RM) $(OBJ_DIR)

